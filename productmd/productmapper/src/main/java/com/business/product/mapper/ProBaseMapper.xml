<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.business.product.dao.ProBaseMapper">
  <resultMap id="BaseResultMap" type="com.business.product.pojo.ProBase">
    <id column="proid" jdbcType="BIGINT" property="proid" />
    <result column="protypeid" jdbcType="BIGINT" property="protypeid" />
    <result column="commerid" jdbcType="BIGINT" property="commerid" />
    <result column="proname" jdbcType="VARCHAR" property="proname" />
    <result column="proprice" jdbcType="BIGINT" property="proprice" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    proid, protypeid, commerid, proname, proprice
  </sql>

    <!--*****************后加********************-->
    <!--根据供应商的id查询商品基本信息表-->
    <select id="seleByComId" parameterType="java.lang.Long" resultType="com.business.product.pojo.ProBase">
        select * from probase where commerid = #{commerid}
    </select>

    <!--根据商品id得到商品类型id-->
    <select id="selectTypeidByid" parameterType="java.lang.Long" resultType="java.lang.Long">
        select protypeid from probase where proid = #{proid}
    </select>
    <!--****************************************-->

  <select id="selectByExample" parameterType="com.business.product.pojo.ProBaseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from probase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from probase
    where proid = #{proid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from probase
    where proid = #{proid,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.business.product.pojo.ProBaseExample">
    delete from probase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.business.product.pojo.ProBase">
    insert into probase (proid, protypeid, commerid, 
      proname, proprice)
    values (#{proid,jdbcType=BIGINT}, #{protypeid,jdbcType=BIGINT}, #{commerid,jdbcType=BIGINT}, 
      #{proname,jdbcType=VARCHAR}, #{proprice,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.business.product.pojo.ProBase">
    <!--*************配置立即得到主键*****************-->
      <selectKey keyProperty="proid">
          select last_insert_id()
      </selectKey>
     <!--*******************************************-->
    insert into probase
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="proid != null">
        proid,
      </if>
      <if test="protypeid != null">
        protypeid,
      </if>
      <if test="commerid != null">
        commerid,
      </if>
      <if test="proname != null">
        proname,
      </if>
      <if test="proprice != null">
        proprice,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="proid != null">
        #{proid,jdbcType=BIGINT},
      </if>
      <if test="protypeid != null">
        #{protypeid,jdbcType=BIGINT},
      </if>
      <if test="commerid != null">
        #{commerid,jdbcType=BIGINT},
      </if>
      <if test="proname != null">
        #{proname,jdbcType=VARCHAR},
      </if>
      <if test="proprice != null">
        #{proprice,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.business.product.pojo.ProBaseExample" resultType="java.lang.Long">
    select count(*) from probase
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update probase
    <set>
      <if test="record.proid != null">
        proid = #{record.proid,jdbcType=BIGINT},
      </if>
      <if test="record.protypeid != null">
        protypeid = #{record.protypeid,jdbcType=BIGINT},
      </if>
      <if test="record.commerid != null">
        commerid = #{record.commerid,jdbcType=BIGINT},
      </if>
      <if test="record.proname != null">
        proname = #{record.proname,jdbcType=VARCHAR},
      </if>
      <if test="record.proprice != null">
        proprice = #{record.proprice,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update probase
    set proid = #{record.proid,jdbcType=BIGINT},
      protypeid = #{record.protypeid,jdbcType=BIGINT},
      commerid = #{record.commerid,jdbcType=BIGINT},
      proname = #{record.proname,jdbcType=VARCHAR},
      proprice = #{record.proprice,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.business.product.pojo.ProBase">
    update probase
    <set>
      <if test="protypeid != null">
        protypeid = #{protypeid,jdbcType=BIGINT},
      </if>
      <if test="commerid != null">
        commerid = #{commerid,jdbcType=BIGINT},
      </if>
      <if test="proname != null">
        proname = #{proname,jdbcType=VARCHAR},
      </if>
      <if test="proprice != null">
        proprice = #{proprice,jdbcType=BIGINT},
      </if>
    </set>
    where proid = #{proid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.business.product.pojo.ProBase">
    update probase
    set protypeid = #{protypeid,jdbcType=BIGINT},
      commerid = #{commerid,jdbcType=BIGINT},
      proname = #{proname,jdbcType=VARCHAR},
      proprice = #{proprice,jdbcType=BIGINT}
    where proid = #{proid,jdbcType=BIGINT}
  </update>
</mapper>